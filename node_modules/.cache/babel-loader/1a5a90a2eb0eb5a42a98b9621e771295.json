{"ast":null,"code":"import _slicedToArray from \"/Users/Mmy_26/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/Users/Mmy_26/selfStudy-workspace/todo-react/src/App.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport ColorfulMessage from \"./components/ColorfulMessage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar App = function App() {\n  _s();\n\n  // [stateの値, state値を変更する関数名] = useState(初期値);\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      num = _useState2[0],\n      setNum = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      faceShowFlag = _useState4[0],\n      setFaceSHowFlag = _useState4[1];\n\n  var onClickCountUp = function onClickCountUp() {\n    setNum(num + 1);\n  };\n\n  var onClickSwitchShowFlag = function onClickSwitchShowFlag() {\n    setFaceSHowFlag(!faceShowFlag);\n  }; // stateな値が切り替わると再レンダリングされるため、on/offの切り替えが、下記のifでtrueの戻されてしまうため,useEffect()で動作の不備を回避させる必要がある\n\n\n  if (num > 0) {\n    if (num % 3 === 0) {\n      faceShowFlag || setFaceSHowFlag(true);\n    } else {\n      faceShowFlag && setFaceSHowFlag(false);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        color: \"red\"\n      },\n      children: \"\\u3053\\u3093\\u306B\\u3061\\u306F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(ColorfulMessage, {\n      color: \"red\",\n      children: \"\\u5143\\u6C17\\u3067\\u3059\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClickSwitchShowFlag,\n      children: \"on/off\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClickCountUp,\n      children: \"\\u30AB\\u30A6\\u30F3\\u30C8\\u30A2\\u30C3\\u30D7\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: num\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, _this), faceShowFlag && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u0669( \\u141B )\\u0648\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 24\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(App, \"exP4joC4fKAci72CLanITbzMdBs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","ColorfulMessage","App","num","setNum","faceShowFlag","setFaceSHowFlag","onClickCountUp","onClickSwitchShowFlag","color"],"sources":["/Users/Mmy_26/selfStudy-workspace/todo-react/src/App.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport ColorfulMessage from \"./components/ColorfulMessage\";\nconst App = () => {\n  // [stateの値, state値を変更する関数名] = useState(初期値);\n  const [num, setNum] = useState(0);\n  const [faceShowFlag, setFaceSHowFlag] = useState(true);\n\n  const onClickCountUp = () => {\n    setNum(num + 1);\n  };\n  const onClickSwitchShowFlag = () => {\n    setFaceSHowFlag(!faceShowFlag);\n  };\n  // stateな値が切り替わると再レンダリングされるため、on/offの切り替えが、下記のifでtrueの戻されてしまうため,useEffect()で動作の不備を回避させる必要がある\n  if (num > 0) {\n    if (num % 3 === 0) {\n      faceShowFlag || setFaceSHowFlag(true);\n    } else {\n      faceShowFlag && setFaceSHowFlag(false);\n    }\n  }\n\n  return (\n    <>\n      <h1 style={{ color: \"red\" }}>こんにちは</h1>\n      {/* color=\"red\" message=\"元気です！\"をPropsで渡す */}\n      <ColorfulMessage color=\"red\">元気です</ColorfulMessage>\n      <button onClick={onClickSwitchShowFlag}>on/off</button>\n      <br />\n      <button onClick={onClickCountUp}>カウントアップ</button>\n      <p>{num}</p>\n      {faceShowFlag && <p>٩( ᐛ )و</p>}\n    </>\n  );\n};\n\nexport default App;\n"],"mappings":";;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,eAAP,MAA4B,8BAA5B;;;;AACA,IAAMC,GAAG,GAAG,SAANA,GAAM,GAAM;EAAA;;EAChB;EACA,gBAAsBF,QAAQ,CAAC,CAAD,CAA9B;EAAA;EAAA,IAAOG,GAAP;EAAA,IAAYC,MAAZ;;EACA,iBAAwCJ,QAAQ,CAAC,IAAD,CAAhD;EAAA;EAAA,IAAOK,YAAP;EAAA,IAAqBC,eAArB;;EAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;IAC3BH,MAAM,CAACD,GAAG,GAAG,CAAP,CAAN;EACD,CAFD;;EAGA,IAAMK,qBAAqB,GAAG,SAAxBA,qBAAwB,GAAM;IAClCF,eAAe,CAAC,CAACD,YAAF,CAAf;EACD,CAFD,CARgB,CAWhB;;;EACA,IAAIF,GAAG,GAAG,CAAV,EAAa;IACX,IAAIA,GAAG,GAAG,CAAN,KAAY,CAAhB,EAAmB;MACjBE,YAAY,IAAIC,eAAe,CAAC,IAAD,CAA/B;IACD,CAFD,MAEO;MACLD,YAAY,IAAIC,eAAe,CAAC,KAAD,CAA/B;IACD;EACF;;EAED,oBACE;IAAA,wBACE;MAAI,KAAK,EAAE;QAAEG,KAAK,EAAE;MAAT,CAAX;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,SADF,eAGE,QAAC,eAAD;MAAiB,KAAK,EAAC,KAAvB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,SAHF,eAIE;MAAQ,OAAO,EAAED,qBAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,SAJF,eAKE;MAAA;MAAA;MAAA;IAAA,SALF,eAME;MAAQ,OAAO,EAAED,cAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,SANF,eAOE;MAAA,UAAIJ;IAAJ;MAAA;MAAA;MAAA;IAAA,SAPF,EAQGE,YAAY,iBAAI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,SARnB;EAAA,gBADF;AAYD,CAhCD;;GAAMH,G;;KAAAA,G;AAkCN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}